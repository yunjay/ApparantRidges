#version 460
layout(local_size_x = 1024, local_size_y = 1, local_size_z = 1) in;
layout(binding = 9, std430) readonly buffer vertexBuffer{
    vec4 vertices[];
};
layout(binding = 11, std430) readonly buffer indexBuffer{
    uint indices[];
};
layout(binding = 20, std430) coherent buffer adjacentFacesBuffer{
    int adjFaces[][20];
};
uniform uint indicesSize;
void main(){
    //per face
    //int id causes a bug. No implicit casts!
    //gl_GlobalInvocationID is a uvec3
    uint id = gl_GlobalInvocationID.x;
    uint faceID = 3*id;
    if(faceID >= indicesSize) return;

    //three vertices on face
    uint vertexIDs[3] = {
        indices[faceID],
        indices[faceID+1],
        indices[faceID+2]
    };
    //for each vertex
    for(int i=0; i<3; i++){
        int next = (i+1)%3;
        int prev = (i+2)%3;
        for(int j=0;j<10;j++){
            //The elements are initialized with -1 so this checks for empty space
            if(adjFaces[ vertexIDs[i] ][2*j]<0){
                adjFaces[ vertexIDs[i] ][2*j] = int(vertexIDs[next]);
                adjFaces[ vertexIDs[i] ][2*j+1] = int(vertexIDs[prev]);
                break;
            }
        }
    }

}